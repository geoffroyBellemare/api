<?php //%255BApp%255CEntity%255CCommand%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
    ],
    null,
    [
        'stdClass' => [
            'filterClass' => [
                1 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                'ApiPlatform\\Core\\Serializer\\Filter\\PropertyFilter',
            ],
            'properties' => [
                1 => [
                    'customer' => 'exact',
                ],
            ],
            'arguments' => [
                2 => [
                    'parameterName' => 'properties',
                    'overrideDefaultProperties' => false,
                    'whitelist' => [
                        'id',
                        'totalPrice',
                        'commandItems',
                    ],
                ],
            ],
            'collectionOperations' => [
                3 => [
                    'get' => [
                        'normalization_context' => [
                            'groups' => [
                                'get_command_with_item',
                            ],
                        ],
                    ],
                    'post_PaymentIntent' => [
                        'method' => 'POST',
                        'path' => '/command/paymentItent',
                        'controller' => 'App\\Controller\\CommandIntentAction',
                        'access_control' => 'is_granted(\'IS_AUTHENTICATED_FULLY\')',
                        'denormalization_context' => [
                            'groups' => [
                                'put-payment-intent',
                            ],
                        ],
                    ],
                    'post' => [
                        'denormalization_context' => [
                            'groups' => [
                                'post',
                            ],
                        ],
                        'normalization_context' => [
                            'groups' => [
                                'get_command_with_item',
                            ],
                        ],
                    ],
                    'post-hooks' => [
                        'method' => 'POST',
                        'path' => '/commands/hooks',
                        'controller' => 'App\\Controller\\StripeHooksAction',
                        'defaults' => [
                            '_api_receive' => false,
                        ],
                    ],
                ],
            ],
            'itemOperations' => [
                3 => [
                    'get',
                    'put' => [
                        'denormalization_context' => [
                            'groups' => [
                                'put',
                            ],
                        ],
                        'normalization_context' => [
                            'groups' => [
                                'get_command_with_item',
                            ],
                        ],
                    ],
                    'put-checkout-session' => [
                        'method' => 'PUT',
                        'path' => '/command/{id}/checkout',
                        'controller' => 'CreateCheckoutSession',
                        'denormalization_context' => [
                            'groups' => [
                                'post-checkout-session',
                            ],
                        ],
                    ],
                    'get-paymentIntent' => [
                        'method' => 'GET',
                        'path' => '/command/paymentItent/{id}',
                        'controller' => 'App\\Controller\\CommandIntentAction',
                        'access_control' => 'is_granted(\'IS_AUTHENTICATED_FULLY\') and (object.getCustomer() == user or is_granted(\'ROLE_ADMIN\'))',
                        'normalization_context' => [
                            'groups' => [
                                'put-payment-intent',
                            ],
                        ],
                    ],
                ],
            ],
            'attributes' => [
                3 => [
                    'pagination_enabled' => false,
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];

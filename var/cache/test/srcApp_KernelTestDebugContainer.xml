<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/src</parameter>
    <parameter key="kernel.project_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test</parameter>
    <parameter key="kernel.logs_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="EasyAdminBundle">EasyCorp\Bundle\EasyAdminBundle\EasyAdminBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="ApiPlatformBundle">ApiPlatform\Core\Bridge\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="EndroidQrCodeBundle">Endroid\QrCodeBundle\EndroidQrCodeBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="EasyAdminBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src</parameter>
        <parameter key="namespace">EasyCorp\Bundle\EasyAdminBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/api-platform/core/src/Bridge/Symfony/Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Core\Bridge\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/lexik/jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="EndroidQrCodeBundle" type="collection">
        <parameter key="path">/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/endroid/qr-code-bundle/src</parameter>
        <parameter key="namespace">Endroid\QrCodeBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelTestDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="domain">http://localhost:8000/</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/Users/geoffroybellemare/Documents/workspace/PhpServer/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/srcApp_KernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelTestDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="twig.exception_listener.controller">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_WRITER" type="collection">
        <parameter>ROLE_COMMENTATOR</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_WRITER</parameter>
        <parameter>ROLE_EDITOR</parameter>
      </parameter>
      <parameter key="ROLE_SUPERADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="easyadmin.config" type="collection">
      <parameter key="entities" type="collection">
        <parameter key="Spot" type="collection">
          <parameter key="class">App\Entity\Spot</parameter>
          <parameter key="name">Spot</parameter>
        </parameter>
      </parameter>
      <parameter key="site_name">EasyAdmin</parameter>
      <parameter key="formats" type="collection">
        <parameter key="date">Y-m-d</parameter>
        <parameter key="time">H:i:s</parameter>
        <parameter key="datetime">F j, Y H:i</parameter>
        <parameter key="dateinterval">%y Year(s) %m Month(s) %d Day(s)</parameter>
      </parameter>
      <parameter key="disabled_actions" type="collection"/>
      <parameter key="translation_domain">messages</parameter>
      <parameter key="user" type="collection">
        <parameter key="display_name">true</parameter>
        <parameter key="display_avatar">true</parameter>
        <parameter key="name_property_path">__toString</parameter>
        <parameter key="avatar_property_path">null</parameter>
      </parameter>
      <parameter key="design" type="collection">
        <parameter key="brand_color">hsl(230, 55%, 60%)</parameter>
        <parameter key="form_theme" type="collection">
          <parameter>@EasyAdmin/form/bootstrap_4.html.twig</parameter>
        </parameter>
        <parameter key="assets" type="collection">
          <parameter key="css" type="collection"/>
          <parameter key="js" type="collection"/>
          <parameter key="favicon" type="collection">
            <parameter key="path">favicon.ico</parameter>
            <parameter key="mime_type">image/x-icon</parameter>
          </parameter>
        </parameter>
        <parameter key="menu" type="collection"/>
      </parameter>
      <parameter key="list" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="collapse_actions">false</parameter>
        <parameter key="batch_actions" type="collection"/>
        <parameter key="max_results">15</parameter>
        <parameter key="item_permission">null</parameter>
      </parameter>
      <parameter key="search" type="collection"/>
      <parameter key="edit" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="item_permission">null</parameter>
      </parameter>
      <parameter key="new" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="item_permission">null</parameter>
      </parameter>
      <parameter key="show" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="max_results">10</parameter>
        <parameter key="item_permission">null</parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>%env(CORS_ALLOW_ORIGIN)%</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
      </parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Link</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title"></parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">0.0.0</parameter>
    <parameter key="api_platform.show_webby">true</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\InvalidArgumentException">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\FilterValidationException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/json</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection">
      <parameter key="json" type="collection">
        <parameter>application/merge-patch+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.allow_plain_identifiers">false</parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">false</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">false</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">itemsPerPage</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="partial">false</parameter>
      <parameter key="client_enabled">false</parameter>
      <parameter key="client_items_per_page">false</parameter>
      <parameter key="client_partial">false</parameter>
      <parameter key="items_per_page">30</parameter>
      <parameter key="maximum_items_per_page">null</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="items_per_page_parameter_name">itemsPerPage</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Accept</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Entity</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl">/oauth/v2/token</parameter>
    <parameter key="api_platform.oauth.authorizationUrl">/oauth/v2/auth</parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">true</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection"/>
    <parameter key="api_platform.graphql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphql_playground.enabled">false</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">%env(JWT_PASSPHRASE)%</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">3600</parameter>
    <parameter key="lexik_jwt_authentication.clock_skew">0</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="lexik_jwt_authentication.user_id_claim">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="lexik_jwt_authentication.encoder.crypto_engine">openssl</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name" type="string">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">localhost</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.api_platform.json_schema.json_schema_generate_command</parameter>
      <parameter>console.command.public_alias.api_platform.swagger.command.swagger_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Controller\CommandIntentAction" class="App\Controller\CommandIntentAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="App\Services\CommandService"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\Controller\CreateCheckoutSession" class="App\Controller\CreateCheckoutSession" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Security\StripeService"/>
    </service>
    <service id="App\Controller\DefaultController" class="App\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\DefaultController"/>
      </call>
    </service>
    <service id="App\Controller\PaymentIntentAction" class="App\Controller\PaymentIntentAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="App\Security\StripeService"/>
    </service>
    <service id="App\Controller\ResetPasswordAction" class="App\Controller\ResetPasswordAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
    </service>
    <service id="App\Controller\SpotController" class="App\Controller\SpotController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\SpotController"/>
      </call>
    </service>
    <service id="App\Controller\StripeHooksAction" class="App\Controller\StripeHooksAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Security\StripeService"/>
      <argument type="service" id="App\Repository\ShoppingCartRepository"/>
      <argument type="service" id="App\Repository\CommandRepository"/>
      <argument type="service" id="App\Services\CommandService"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="App\Security\TokenGenerator"/>
    </service>
    <service id="App\EventListener\AuthenticationSuccessListener" class="App\EventListener\AuthenticationSuccessListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="onAuthenticationSuccessResponse"/>
    </service>
    <service id="App\EventListener\ExceptionListener" class="App\EventListener\ExceptionListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception" priority="1"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="api_platform.action.exception"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\EventSubscriber\AuthoredEntitySubscriber" class="App\EventSubscriber\AuthoredEntitySubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\EventSubscriber\CommandEntityPostSubscriber" class="App\EventSubscriber\CommandEntityPostSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Security\StripeService"/>
      <argument type="service" id="App\Services\CommandService"/>
    </service>
    <service id="App\EventSubscriber\CommandEntitySubscriber" class="App\EventSubscriber\CommandEntitySubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Security\StripeService"/>
      <argument type="service" id="App\Services\CommandService"/>
    </service>
    <service id="App\EventSubscriber\CompanizedEntitySubscriber" class="App\EventSubscriber\CompanizedEntitySubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\EventSubscriber\EphemeralKeyEventSubscriber" class="App\EventSubscriber\EphemeralKeyEventSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="App\Security\StripeService"/>
    </service>
    <service id="App\EventSubscriber\ExceptionSubscriber" class="App\EventSubscriber\ExceptionSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\EventSubscriber\PreSignUrlSubscriber" class="App\EventSubscriber\PreSignUrlSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Upload\AwsS3"/>
    </service>
    <service id="App\EventSubscriber\PublishedDateEntitySubscriber" class="App\EventSubscriber\PublishedDateEntitySubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\EventSubscriber\ShoppingCartItemEntitySubscriber" class="App\EventSubscriber\ShoppingCartItemEntitySubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\EventSubscriber\UserConfirmationSubscriber" class="App\EventSubscriber\UserConfirmationSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Security\UserConfirmationService"/>
    </service>
    <service id="App\EventSubscriber\UserRegisterImageProfileSubscriber" class="App\EventSubscriber\UserRegisterImageProfileSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Upload\AwsS3"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\EventSubscriber\UserRegisterSubscriber" class="App\EventSubscriber\UserRegisterSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="App\Security\TokenGenerator"/>
      <argument type="service" id="App\Mailer\Mailer"/>
      <argument type="service" id="App\Upload\AwsS3"/>
      <argument type="service" id="App\Security\StripeService"/>
    </service>
    <service id="App\Exception\EmptyShoppingCartException" class="App\Exception\EmptyShoppingCartException" autowire="true" autoconfigure="true"/>
    <service id="App\Mailer\Mailer" class="App\Mailer\Mailer" autowire="true" autoconfigure="true">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Endroid\QrCode\Factory\QrCodeFactory"/>
    </service>
    <service id="App\Notifications\UserRegisterNotification" class="App\Notifications\UserRegisterNotification" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Upload\AwsS3"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Repository\CommandRepository" class="App\Repository\CommandRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CommentRepository" class="App\Repository\CommentRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShoppingCartItemRepository" class="App\Repository\ShoppingCartItemRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShoppingCartRepository" class="App\Repository\ShoppingCartRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SpotRepository" class="App\Repository\SpotRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SpotSubTypeRepository" class="App\Repository\SpotSubTypeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TownRepository" class="App\Repository\TownRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\StripeService" class="App\Security\StripeService" autowire="true" autoconfigure="true">
      <argument>%env(S_SECRET)%</argument>
      <argument>http://localhost:8000/</argument>
    </service>
    <service id="App\Security\TokenAuthenticator" class="App\Security\TokenAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
    </service>
    <service id="App\Security\TokenGenerator" class="App\Security\TokenGenerator" autowire="true" autoconfigure="true"/>
    <service id="App\Security\UserConfirmationService" class="App\Security\UserConfirmationService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Security\UserEnabledChecker" class="App\Security\UserEnabledChecker" autowire="true" autoconfigure="true"/>
    <service id="App\Serializer\UserAttributeNormalizer" class="App\Serializer\UserAttributeNormalizer" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer" priority="64"/>
      <tag name="serializer.normalizer"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\Serializer\UserContextBuilder" class="App\Serializer\UserContextBuilder" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Serializer\UserContextBuilder.inner"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Services\CommandService" class="App\Services\CommandService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Mailer\Mailer"/>
      <argument type="service" id="App\Repository\CommandRepository"/>
      <argument type="service" id="App\Repository\ShoppingCartItemRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Security\StripeService"/>
    </service>
    <service id="App\Upload\AwsS3" class="App\Upload\AwsS3" autowire="true" autoconfigure="true">
      <argument>%env(AWS_KEY)%</argument>
      <argument>%env(AWS_SECRET)%</argument>
      <argument>%env(AWS_IMAGE_BUCKET)%</argument>
    </service>
    <service id="App\Validators\Constraints\CompanyOwner" class="App\Validators\Constraints\CompanyOwner" autowire="true" autoconfigure="true"/>
    <service id="App\Validators\Constraints\CompanyOwnerValidator" class="App\Validators\Constraints\CompanyOwnerValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\Validators\Constraints\ShoppingCartNotEmpty" class="App\Validators\Constraints\ShoppingCartNotEmpty" autowire="true" autoconfigure="true"/>
    <service id="App\Validators\Constraints\ShoppingCartNotEmptyValidator" class="App\Validators\Constraints\ShoppingCartNotEmptyValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/srcApp_KernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources</argument>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.easyadmin" type="service" id="cache.easyadmin" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.easyadmin" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.identifiers_extractor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.subresource_operation_factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~Ayh3awt" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~Ayh3awt" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~Ayh3awt"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <argument type="service" id=".2_~Ayh3awt"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.easyadmin</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/translations</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</argument>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/translations</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</argument>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFiltersFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminBatchFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EasyAdminExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Guesser\MissingDoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Zs-S8WgEsN</argument>
      <argument>0</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache" public="false">
      <argument type="service" id="cache.app"/>
      <deprecated>The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>O14K+VAUi2</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>OTZlRBaFtL</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>7nHmf7TWRV</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>jGFhc-35LA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>jmLZokoRre</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.easyadmin" type="service" id="cache.easyadmin" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.easyadmin" type="service" id="cache.easyadmin" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2, use "identity_translator" instead.</deprecated>
    </service>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\KernelBrowser" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false" public="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false" public="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\TestSessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.76WThHL"/>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ApiPlatform\Core\Api\IdentifiersExtractorInterface" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Api\IriConverterInterface" type="service" id="api_platform.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Api\OperationAwareFormatsProviderInterface" type="service" id="api_platform.formats_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Api\ResourceClassResolverInterface" type="service" id="api_platform.resource_class_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Api\UrlGeneratorInterface" type="service" id="api_platform.router" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" type="service" id="api_platform.doctrine.orm.query_extension.eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" type="service" id="api_platform.doctrine.orm.query_extension.filter_eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" type="service" id="api_platform.doctrine.orm.query_extension.filter" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" type="service" id="api_platform.doctrine.orm.query_extension.order" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" type="service" id="api_platform.doctrine.orm.query_extension.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\DataPersister\DataPersisterInterface" type="service" id="debug.api_platform.data_persister" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\DataProvider\CollectionDataProviderInterface" type="service" id="debug.api_platform.collection_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\DataProvider\ItemDataProviderInterface" type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\DataProvider\Pagination" type="service" id="api_platform.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\DataProvider\SubresourceDataProviderInterface" type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\JsonSchema\SchemaFactoryInterface" type="service" id="api_platform.hydra.json_schema.schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\JsonSchema\TypeFactoryInterface" type="service" id="api_platform.json_schema.type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" type="service" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" type="service" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" type="service" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Security\ResourceAccessCheckerInterface" type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Serializer\SerializerContextBuilderInterface" type="service" id="api_platform.serializer.context_builder.filter" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Core\Validator\ValidatorInterface" type="service" id="api_platform.validator" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataFixtures\AppFixtures" type="service" id="App\DataFixtures\AppFixtures" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\AuthenticationSuccessListener" type="service" id="App\EventListener\AuthenticationSuccessListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\ExceptionListener" type="service" id="App\EventListener\ExceptionListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\AuthoredEntitySubscriber" type="service" id="App\EventSubscriber\AuthoredEntitySubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\CommandEntityPostSubscriber" type="service" id="App\EventSubscriber\CommandEntityPostSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\CommandEntitySubscriber" type="service" id="App\EventSubscriber\CommandEntitySubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\CompanizedEntitySubscriber" type="service" id="App\EventSubscriber\CompanizedEntitySubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\EphemeralKeyEventSubscriber" type="service" id="App\EventSubscriber\EphemeralKeyEventSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\ExceptionSubscriber" type="service" id="App\EventSubscriber\ExceptionSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\PreSignUrlSubscriber" type="service" id="App\EventSubscriber\PreSignUrlSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\PublishedDateEntitySubscriber" type="service" id="App\EventSubscriber\PublishedDateEntitySubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\ShoppingCartItemEntitySubscriber" type="service" id="App\EventSubscriber\ShoppingCartItemEntitySubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\UserConfirmationSubscriber" type="service" id="App\EventSubscriber\UserConfirmationSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\UserRegisterImageProfileSubscriber" type="service" id="App\EventSubscriber\UserRegisterImageProfileSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\UserRegisterSubscriber" type="service" id="App\EventSubscriber\UserRegisterSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\Exception\EmptyShoppingCartException" type="service" id="App\Exception\EmptyShoppingCartException" on-invalid="ignore_uninitialized"/>
        <argument key="App\Mailer\Mailer" type="service" id="App\Mailer\Mailer" on-invalid="ignore_uninitialized"/>
        <argument key="App\Notifications\UserRegisterNotification" type="service" id="App\Notifications\UserRegisterNotification" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CommandRepository" type="service" id="App\Repository\CommandRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CommentRepository" type="service" id="App\Repository\CommentRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ShoppingCartItemRepository" type="service" id="App\Repository\ShoppingCartItemRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ShoppingCartRepository" type="service" id="App\Repository\ShoppingCartRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\SpotRepository" type="service" id="App\Repository\SpotRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\SpotSubTypeRepository" type="service" id="App\Repository\SpotSubTypeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\TownRepository" type="service" id="App\Repository\TownRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\UserRepository" type="service" id="App\Repository\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\StripeService" type="service" id="App\Security\StripeService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\TokenAuthenticator" type="service" id="App\Security\TokenAuthenticator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\TokenGenerator" type="service" id="App\Security\TokenGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\UserConfirmationService" type="service" id="App\Security\UserConfirmationService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\UserEnabledChecker" type="service" id="App\Security\UserEnabledChecker" on-invalid="ignore_uninitialized"/>
        <argument key="App\Serializer\UserAttributeNormalizer" type="service" id="App\Serializer\UserAttributeNormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="App\Serializer\UserContextBuilder" type="service" id="App\Serializer\UserContextBuilder" on-invalid="ignore_uninitialized"/>
        <argument key="App\Serializer\UserContextBuilder.inner" type="service" id="App\Serializer\UserContextBuilder.inner" on-invalid="ignore_uninitialized"/>
        <argument key="App\Services\CommandService" type="service" id="App\Services\CommandService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Upload\AwsS3" type="service" id="App\Upload\AwsS3" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validators\Constraints\CompanyOwner" type="service" id="App\Validators\Constraints\CompanyOwner" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validators\Constraints\CompanyOwnerValidator" type="service" id="App\Validators\Constraints\CompanyOwnerValidator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validators\Constraints\ShoppingCartNotEmpty" type="service" id="App\Validators\Constraints\ShoppingCartNotEmpty" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validators\Constraints\ShoppingCartNotEmptyValidator" type="service" id="App\Validators\Constraints\ShoppingCartNotEmptyValidator" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Annotations\Reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Driver\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ManagerRegistry" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Configuration\ConfigManager" type="service" id="easyadmin.config.manager" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Search\Autocomplete" type="service" id="easyadmin.autocomplete" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Search\Paginator" type="service" id="easyadmin.paginator" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Search\QueryBuilder" type="service" id="easyadmin.query_builder" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" type="service" id="easyadmin.security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Endroid\QrCodeBundle\Twig\QrCodeExtension" type="service" id="Endroid\QrCodeBundle\Twig\QrCodeExtension" on-invalid="ignore_uninitialized"/>
        <argument key="Endroid\QrCode\Factory\QrCodeFactory" type="service" id="Endroid\QrCode\Factory\QrCodeFactory" on-invalid="ignore_uninitialized"/>
        <argument key="Endroid\QrCode\Factory\QrCodeFactoryInterface" type="service" id="Endroid\QrCode\Factory\QrCodeFactory" on-invalid="ignore_uninitialized"/>
        <argument key="Endroid\QrCode\WriterRegistry" type="service" id="Endroid\QrCode\WriterRegistry" on-invalid="ignore_uninitialized"/>
        <argument key="Endroid\QrCode\WriterRegistryInterface" type="service" id="Endroid\QrCode\WriterRegistry" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" type="service" id="lexik_jwt_authentication.encoder.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" type="service" id="lexik_jwt_authentication.handler.authentication_failure" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" type="service" id="lexik_jwt_authentication.handler.authentication_success" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" type="service" id="lexik_jwt_authentication.jws_provider.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" type="service" id="lexik_jwt_authentication.jwt_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" type="service" id="lexik_jwt_authentication.jwt_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" type="service" id="lexik_jwt_authentication.extractor.chain_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $cacheLogger" type="service" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $consoleLogger" type="service" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $doctrineLogger" type="service" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $eventLogger" type="service" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $phpLogger" type="service" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $requestLogger" type="service" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $routerLogger" type="service" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $securityLogger" type="service" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $translationLogger" type="service" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\SimpleCache\CacheInterface" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Mailer" type="service" id="swiftmailer.mailer.default" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Transport" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Cache\Adapter\AdapterInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormFactoryInterface" type="service" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\SessionInterface" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" type="service" id="security.authentication.manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" type="service" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" type="service" id="security.user_password_encoder.generic" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" type="service" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Security" type="service" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserCheckerInterface" type="service" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserProviderInterface" type="service" id="security.user.provider.concrete.database" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" type="service" id="security.authentication.guard_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" type="service" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\HttpUtils" type="service" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" type="service" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" type="service" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\TranslatorInterface" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\TranslatorInterface" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Twig_Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_command_api_platform_core_serializer_filter_property_filter" type="service" id="annotated_app_entity_command_api_platform_core_serializer_filter_property_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter" type="service" id="annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache" type="service" id="annotations.cache" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache_warmer" type="service" id="annotations.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cached_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.dummy_registry" type="service" id="annotations.dummy_registry" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.filesystem_cache" type="service" id="annotations.filesystem_cache" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.reader" type="service" id="annotations.reader" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache_warmer.cache_pool_clearer" type="service" id="api_platform.cache_warmer.cache_pool_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.collection_data_provider" type="service" id="debug.api_platform.collection_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.data_collector.request" type="service" id="api_platform.data_collector.request" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.data_persister" type="service" id="debug.api_platform.data_persister" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.metadata_factory" type="service" id="api_platform.doctrine.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.data_persister" type="service" id="api_platform.doctrine.orm.data_persister" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.default.collection_data_provider" type="service" id="api_platform.doctrine.orm.default.collection_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.default.item_data_provider" type="service" id="api_platform.doctrine.orm.default.item_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.default.subresource_data_provider" type="service" id="api_platform.doctrine.orm.default.subresource_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.property.metadata_factory" type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" type="service" id="api_platform.metadata.property.metadata_factory.inherited" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.eager_loading" type="service" id="api_platform.doctrine.orm.query_extension.eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.filter" type="service" id="api_platform.doctrine.orm.query_extension.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.filter_eager_loading" type="service" id="api_platform.doctrine.orm.query_extension.filter_eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.order" type="service" id="api_platform.doctrine.orm.query_extension.order" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.pagination" type="service" id="api_platform.doctrine.orm.query_extension.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.filter_collection_factory" type="service" id="api_platform.filter_collection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.filter_locator" type="service" id="api_platform.filter_locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.filters" type="service" id="api_platform.filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.formats_provider" type="service" id="api_platform.formats_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.http_cache.listener.response.configure" type="service" id="api_platform.http_cache.listener.response.configure" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.json_schema.schema_factory" type="service" id="api_platform.hydra.json_schema.schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.json_schema.schema_factory.inner" type="service" id="api_platform.hydra.json_schema.schema_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.listener.response.add_link_header" type="service" id="api_platform.hydra.listener.response.add_link_header" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection" type="service" id="api_platform.hydra.normalizer.collection_filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection_filters" type="service" id="api_platform.hydra.normalizer.collection_filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection_filters.inner" type="service" id="api_platform.hydra.normalizer.partial_collection_view" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.constraint_violation_list" type="service" id="api_platform.hydra.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.documentation" type="service" id="api_platform.hydra.normalizer.documentation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.entrypoint" type="service" id="api_platform.hydra.normalizer.entrypoint" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.error" type="service" id="api_platform.hydra.normalizer.error" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.partial_collection_view" type="service" id="api_platform.hydra.normalizer.partial_collection_view" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.partial_collection_view.inner" type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifier.converter" type="service" id="api_platform.identifier.converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifier.date_normalizer" type="service" id="api_platform.identifier.date_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifier.integer" type="service" id="api_platform.identifier.integer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifier.uuid_normalizer" type="service" id="api_platform.identifier.uuid_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifiers_extractor" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifiers_extractor.cached" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifiers_extractor.cached.inner" type="service" id="api_platform.identifiers_extractor.cached.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.iri_converter" type="service" id="api_platform.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.item_data_provider" type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.json_schema_generate_command" type="service" id="api_platform.json_schema.json_schema_generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.schema_factory" type="service" id="api_platform.hydra.json_schema.schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.type_factory" type="service" id="api_platform.json_schema.type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.context_builder" type="service" id="api_platform.jsonld.context_builder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.encoder" type="service" id="api_platform.jsonld.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.item" type="service" id="api_platform.jsonld.normalizer.item" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.object" type="service" id="api_platform.jsonld.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.exception" type="service" id="api_platform.listener.exception" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.exception.validation" type="service" id="api_platform.listener.exception.validation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.request.add_format" type="service" id="api_platform.listener.request.add_format" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.request.deserialize" type="service" id="api_platform.listener.request.deserialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.request.read" type="service" id="api_platform.listener.request.read" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.view.respond" type="service" id="api_platform.listener.view.respond" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.view.serialize" type="service" id="api_platform.listener.view.serialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.view.validate" type="service" id="api_platform.listener.view.validate" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.view.validate_query_parameters" type="service" id="api_platform.listener.view.validate_query_parameters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.view.write" type="service" id="api_platform.listener.view.write" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.extractor.xml" type="service" id="api_platform.metadata.extractor.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.extractor.yaml" type="service" id="api_platform.metadata.extractor.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory" type="service" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.annotation" type="service" id="api_platform.metadata.property.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.annotation.inner" type="service" id="api_platform.metadata.subresource.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.cached" type="service" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.cached.inner" type="service" id="api_platform.metadata.property.metadata_factory.validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.inherited" type="service" id="api_platform.metadata.property.metadata_factory.inherited" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.inherited.inner" type="service" id="api_platform.metadata.property.metadata_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.property_info" type="service" id="api_platform.metadata.property.metadata_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.property_info.inner" type="service" id="api_platform.metadata.property.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.serializer" type="service" id="api_platform.metadata.property.metadata_factory.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.serializer.inner" type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.validator" type="service" id="api_platform.metadata.property.metadata_factory.validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.validator.inner" type="service" id="api_platform.metadata.property.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.xml" type="service" id="api_platform.metadata.property.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.yaml" type="service" id="api_platform.metadata.property.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.yaml.inner" type="service" id="api_platform.metadata.property.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory" type="service" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.cached" type="service" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.cached.inner" type="service" id="api_platform.metadata.property.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.inherited" type="service" id="api_platform.metadata.property.name_collection_factory.inherited" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.inherited.inner" type="service" id="api_platform.metadata.property.name_collection_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.property_info" type="service" id="api_platform.metadata.property.name_collection_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.xml" type="service" id="api_platform.metadata.property.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.xml.inner" type="service" id="api_platform.metadata.property.name_collection_factory.inherited" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.yaml" type="service" id="api_platform.metadata.property.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.yaml.inner" type="service" id="api_platform.metadata.property.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.filter_metadata_factory.annotation" type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.filter_metadata_factory.annotation.inner" type="service" id="api_platform.metadata.resource.metadata_factory.short_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory" type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.annotation" type="service" id="api_platform.metadata.resource.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.annotation.inner" type="service" id="api_platform.metadata.resource.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.cached" type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.cached.inner" type="service" id="api_platform.metadata.resource.metadata_factory.formats" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.formats" type="service" id="api_platform.metadata.resource.metadata_factory.formats" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.formats.inner" type="service" id="api_platform.metadata.resource.metadata_factory.operation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.input_output" type="service" id="api_platform.metadata.resource.metadata_factory.input_output" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.input_output.inner" type="service" id="api_platform.metadata.resource.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.operation" type="service" id="api_platform.metadata.resource.metadata_factory.operation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.operation.inner" type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.php_doc" type="service" id="api_platform.metadata.resource.metadata_factory.php_doc" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.php_doc.inner" type="service" id="api_platform.metadata.resource.metadata_factory.input_output" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.short_name" type="service" id="api_platform.metadata.resource.metadata_factory.short_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.short_name.inner" type="service" id="api_platform.metadata.resource.metadata_factory.php_doc" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.xml" type="service" id="api_platform.metadata.resource.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.yaml" type="service" id="api_platform.metadata.resource.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_factory.yaml.inner" type="service" id="api_platform.metadata.resource.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory" type="service" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.annotation" type="service" id="api_platform.metadata.resource.name_collection_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.annotation.inner" type="service" id="api_platform.metadata.resource.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.cached" type="service" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.cached.inner" type="service" id="api_platform.metadata.resource.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.xml" type="service" id="api_platform.metadata.resource.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.yaml" type="service" id="api_platform.metadata.resource.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.yaml.inner" type="service" id="api_platform.metadata.resource.name_collection_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.subresource.metadata_factory.annotation" type="service" id="api_platform.metadata.subresource.metadata_factory.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.subresource.metadata_factory.annotation.inner" type="service" id="api_platform.metadata.property.metadata_factory.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.name_converter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.negotiator" type="service" id="api_platform.negotiator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_method_resolver" type="service" id="api_platform.operation_method_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver" type="service" id="api_platform.operation_path_resolver.router" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.custom" type="service" id="api_platform.operation_path_resolver.custom" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.dash" type="service" id="api_platform.operation_path_resolver.dash" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.default" type="service" id="api_platform.operation_path_resolver.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.generator" type="service" id="api_platform.operation_path_resolver.generator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.router" type="service" id="api_platform.operation_path_resolver.router" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.operation_path_resolver.underscore" type="service" id="api_platform.operation_path_resolver.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.pagination" type="service" id="api_platform.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator" type="service" id="api_platform.path_segment_name_generator.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator.dash" type="service" id="api_platform.path_segment_name_generator.dash" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator.underscore" type="service" id="api_platform.path_segment_name_generator.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.problem.encoder" type="service" id="api_platform.problem.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.problem.normalizer.constraint_violation_list" type="service" id="api_platform.problem.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.problem.normalizer.error" type="service" id="api_platform.problem.normalizer.error" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.property_info" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.resource_class_resolver" type="service" id="api_platform.resource_class_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.route_loader" type="service" id="api_platform.route_loader" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.route_name_resolver" type="service" id="api_platform.route_name_resolver.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.route_name_resolver.cached" type="service" id="api_platform.route_name_resolver.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.route_name_resolver.cached.inner" type="service" id="api_platform.route_name_resolver.cached.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.router" type="service" id="api_platform.router" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.expression_language" type="service" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.expression_language_provider" type="service" id="api_platform.security.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.listener.request.deny_access" type="service" id="api_platform.security.listener.request.deny_access" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.resource_access_checker" type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder" type="service" id="api_platform.serializer.context_builder.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder.filter" type="service" id="api_platform.serializer.context_builder.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder.filter.inner" type="service" id="App\Serializer\UserContextBuilder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.normalizer.item" type="service" id="api_platform.serializer.normalizer.item" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.uuid_denormalizer" type="service" id="api_platform.serializer.uuid_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer_locator" type="service" id="api_platform.serializer_locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.subresource_data_provider" type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.subresource_operation_factory" type="service" id="api_platform.subresource_operation_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.subresource_operation_factory.cached" type="service" id="api_platform.subresource_operation_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.subresource_operation_factory.cached.inner" type="service" id="api_platform.subresource_operation_factory.cached.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger.command.swagger_command" type="service" id="api_platform.swagger.command.swagger_command" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger.listener.ui" type="service" id="api_platform.swagger.listener.ui" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger.normalizer.api_gateway" type="service" id="api_platform.swagger.normalizer.api_gateway" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger.normalizer.api_gateway.inner" type="service" id="api_platform.swagger.normalizer.api_gateway.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger.normalizer.documentation" type="service" id="api_platform.swagger.normalizer.api_gateway" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.validator" type="service" id="api_platform.validator" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service" id=".service_locator.AmqfVqq" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.not_tagged_controller" type="service" id="debug.argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service" id="assets._default_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.simple" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_pdo_provider" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.easyadmin" type="service" id="cache.easyadmin" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="controller_name_converter" type="service" id=".legacy_controller_name_converter" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.security" type="service" id="data_collector.security" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.collection_data_provider" type="service" id="debug.api_platform.collection_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.collection_data_provider.inner" type="service" id="debug.api_platform.collection_data_provider.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.data_persister" type="service" id="debug.api_platform.data_persister" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.data_persister.inner" type="service" id="debug.api_platform.data_persister.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.item_data_provider" type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.item_data_provider.inner" type="service" id="debug.api_platform.item_data_provider.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.subresource_data_provider" type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.subresource_data_provider.inner" type="service" id="debug.api_platform.subresource_data_provider.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default.inner" type="service" id="debug.argument_resolver.default.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.not_tagged_controller" type="service" id="debug.argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.not_tagged_controller.inner" type="service" id="debug.argument_resolver.not_tagged_controller.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request.inner" type="service" id="debug.argument_resolver.request.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute.inner" type="service" id="debug.argument_resolver.request_attribute.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service.inner" type="service" id="debug.argument_resolver.service.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session.inner" type="service" id="debug.argument_resolver.session.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic.inner" type="service" id="debug.argument_resolver.variadic.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager.inner" type="service" id="debug.security.access.decision_manager.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.user_value_resolver" type="service" id="debug.security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.user_value_resolver.inner" type="service" id="debug.security.user_value_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.authenticated_voter" type="service" id="debug.security.voter.security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.expression_voter" type="service" id="debug.security.voter.security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.role_hierarchy_voter" type="service" id="debug.security.voter.security.access.role_hierarchy_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.vote_listener" type="service" id="debug.security.voter.vote_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger" type="service" id="doctrine.dbal.logger" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.chain.default" type="service" id="doctrine.dbal.logger.chain.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.profiling.default" type="service" id="doctrine.dbal.logger.profiling.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.well_known_schema_asset_filter" type="service" id="doctrine.dbal.well_known_schema_asset_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.fixtures.loader" type="service" id="doctrine.fixtures.loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service" id="doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_annotation_metadata_driver" type="service" id="doctrine.orm.default_annotation_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.validator_loader" type="service" id="doctrine.orm.default_entity_manager.validator_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service" id="doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_query_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_result_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.metadata.annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore_number_aware" type="service" id="doctrine.orm.naming_strategy.underscore_number_aware" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.action_config_pass" type="service" id="easyadmin.configuration.action_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.default_config_pass" type="service" id="easyadmin.configuration.default_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.design_config_pass" type="service" id="easyadmin.configuration.design_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.menu_config_pass" type="service" id="easyadmin.configuration.menu_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.metadata_config_pass" type="service" id="easyadmin.configuration.metadata_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.normalizer_config_pass" type="service" id="easyadmin.configuration.normalizer_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.property_config_pass" type="service" id="easyadmin.configuration.property_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.template_config_pass" type="service" id="easyadmin.configuration.template_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.configuration.view_config_pass" type="service" id="easyadmin.configuration.view_config_pass" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.data_collector" type="service" id="easyadmin.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.extension" type="service" id="easyadmin.filter.extension" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.array" type="service" id="easyadmin.filter.type.array" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.boolean" type="service" id="easyadmin.filter.type.boolean" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.choice" type="service" id="easyadmin.filter.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.comparison" type="service" id="easyadmin.filter.type.comparison" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.configurator.choice" type="service" id="easyadmin.filter.type.configurator.choice" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.date" type="service" id="easyadmin.filter.type.date" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.dateinterval" type="service" id="easyadmin.filter.type.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.datetime" type="service" id="easyadmin.filter.type.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.decimal" type="service" id="easyadmin.filter.type.decimal" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.entity" type="service" id="easyadmin.filter.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.float" type="service" id="easyadmin.filter.type.float" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.integer" type="service" id="easyadmin.filter.type.integer" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.text" type="service" id="easyadmin.filter.type.text" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.textarea" type="service" id="easyadmin.filter.type.textarea" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type.time" type="service" id="easyadmin.filter.type.time" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.filter.type_guesser.doctrine" type="service" id="easyadmin.filter.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.finder" type="service" id="easyadmin.finder" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type" type="service" id="easyadmin.form.type" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.autocomplete" type="service" id="easyadmin.form.type.autocomplete" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.batch" type="service" id="easyadmin.form.type.batch" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.autocomplete" type="service" id="easyadmin.form.type.configurator.autocomplete" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.checkbox" type="service" id="easyadmin.form.type.configurator.checkbox" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.code_editor" type="service" id="easyadmin.form.type.configurator.code_editor" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.collection" type="service" id="easyadmin.form.type.configurator.collection" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.entity" type="service" id="easyadmin.form.type.configurator.entity" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.fos_ckeditor" type="service" id="easyadmin.form.type.configurator.fos_ckeditor" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.ivory_ckeditor" type="service" id="easyadmin.form.type.configurator.ivory_ckeditor" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.textarea" type="service" id="easyadmin.form.type.configurator.textarea" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.configurator.type" type="service" id="easyadmin.form.type.configurator.type" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.divider" type="service" id="easyadmin.form.type.divider" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.extension" type="service" id="easyadmin.form.type.extension" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.fileupload" type="service" id="easyadmin.form.type.fileupload" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.filters" type="service" id="easyadmin.form.type.filters" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.group" type="service" id="easyadmin.form.type.group" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.form.type.section" type="service" id="easyadmin.form.type.section" on-invalid="ignore_uninitialized"/>
        <argument key="easyadmin.twig.extension" type="service" id="easyadmin.twig.extension" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.csrf" type="service" id="form.type_extension.csrf" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service" id="form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.transformation_failure_handling" type="service" id="form.type_extension.form.transformation_failure_handling" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.argument_name_convertor" type="service" id="framework_extra_bundle.argument_name_convertor" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.date_time_param_converter" type="service" id="framework_extra_bundle.date_time_param_converter" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.event.is_granted" type="service" id="framework_extra_bundle.event.is_granted" on-invalid="ignore_uninitialized"/>
        <argument key="identity_translator" type="service" id="identity_translator" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.encoder.default" type="service" id="lexik_jwt_authentication.encoder.default" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.encoder.lcobucci" type="service" id="lexik_jwt_authentication.encoder.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.authorization_header_extractor" type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.chain_extractor" type="service" id="lexik_jwt_authentication.extractor.chain_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.cookie_extractor" type="service" id="lexik_jwt_authentication.extractor.cookie_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.query_parameter_extractor" type="service" id="lexik_jwt_authentication.extractor.query_parameter_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.handler.authentication_failure" type="service" id="lexik_jwt_authentication.handler.authentication_failure" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.handler.authentication_success" type="service" id="lexik_jwt_authentication.handler.authentication_success" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.jws_provider.default" type="service" id="lexik_jwt_authentication.jws_provider.default" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.jws_provider.lcobucci" type="service" id="lexik_jwt_authentication.jws_provider.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.jwt_token_authenticator" type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.key_loader.openssl" type="service" id="lexik_jwt_authentication.key_loader.openssl" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.key_loader.raw" type="service" id="lexik_jwt_authentication.key_loader.raw" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.authentication.entry_point" type="service" id="lexik_jwt_authentication.security.authentication.entry_point" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.authentication.listener" type="service" id="lexik_jwt_authentication.security.authentication.listener" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.authentication.provider" type="service" id="lexik_jwt_authentication.security.authentication.provider" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.guard.jwt_token_authenticator" type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.jwt_user_provider" type="service" id="lexik_jwt_authentication.security.jwt_user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="mime_types" type="service" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.chrome_php" type="service" id="monolog.formatter.chrome_php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.gelf_message" type="service" id="monolog.formatter.gelf_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.html" type="service" id="monolog.formatter.html" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.json" type="service" id="monolog.formatter.json" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.line" type="service" id="monolog.formatter.line" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.loggly" type="service" id="monolog.formatter.loggly" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.logstash" type="service" id="monolog.formatter.logstash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.normalizer" type="service" id="monolog.formatter.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.scalar" type="service" id="monolog.formatter.scalar" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.wildfire" type="service" id="monolog.formatter.wildfire" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main.http_code_strategy" type="service" id="monolog.handler.main.http_code_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.nested" type="service" id="monolog.handler.nested" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.null_internal" type="service" id="monolog.handler.null_internal" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.cache" type="service" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.console" type="service" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.doctrine" type="service" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.event" type="service" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.php" type="service" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.request" type="service" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.router" type="service" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.security" type="service" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.translation" type="service" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.processor.psr_log_message" type="service" id="monolog.processor.psr_log_message" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.cors_listener" type="service" id="nelmio_cors.cors_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_provider.config" type="service" id="nelmio_cors.options_provider.config" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_resolver" type="service" id="nelmio_cors.options_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.php_doc_extractor" type="service" id="property_info.php_doc_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="resolve_controller_name_subscriber" type="service" id=".legacy_resolve_controller_name_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation" type="service" id="routing.loader.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.directory" type="service" id="routing.loader.annotation.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.file" type="service" id="routing.loader.annotation.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.service" type="service" id="routing.loader.service" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.authenticated_voter" type="service" id="security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.decision_manager" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.expression_voter" type="service" id="security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.role_hierarchy_voter" type="service" id="security.access.role_hierarchy_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_listener" type="service" id="security.access_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_map" type="service" id="security.access_map" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.basic_entry_point" type="service" id="security.authentication.basic_entry_point" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.failure_handler.api.json_login" type="service" id="security.authentication.failure_handler.api.json_login" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.guard_handler" type="service" id="security.authentication.guard_handler" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.anonymous" type="service" id="security.authentication.listener.anonymous" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.anonymous.api" type="service" id="security.authentication.listener.anonymous.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.guard.api" type="service" id="security.authentication.listener.guard.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.json.api" type="service" id="security.authentication.listener.json.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.manager" type="service" id="security.authentication.manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.anonymous" type="service" id="security.authentication.provider.anonymous" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.anonymous.api" type="service" id="security.authentication.provider.anonymous.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.dao.api" type="service" id="security.authentication.provider.dao.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.guard.api" type="service" id="security.authentication.provider.guard.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.retry_entry_point" type="service" id="security.authentication.retry_entry_point" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy" type="service" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy.api" type="service" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy_noop" type="service" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.success_handler.api.json_login" type="service" id="security.authentication.success_handler.api.json_login" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.trust_resolver" type="service" id="security.authentication.trust_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.channel_listener" type="service" id="security.channel_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener" type="service" id="security.context_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.encoder_factory" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.encoder_factory.generic" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.exception_listener.api" type="service" id="security.exception_listener.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.expression_language" type="service" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map" type="service" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.api" type="service" id="security.firewall.map.config.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.dev" type="service" id="security.firewall.map.config.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.helper" type="service" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="security.http_utils" type="service" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.handler.csrf_token_clearing" type="service" id="security.logout.handler.csrf_token_clearing" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.handler.session" type="service" id="security.logout.handler.session" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_url_generator" type="service" id="security.logout_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.rememberme.response_listener" type="service" id="security.rememberme.response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.rememberme.token.provider.in_memory" type="service" id="security.rememberme.token.provider.in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.role_hierarchy" type="service" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="security.untracked_token_storage" type="service" id="security.untracked_token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.database" type="service" id="security.user.provider.concrete.database" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker" type="service" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.api" type="service" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_password_encoder.generic" type="service" id="security.user_password_encoder.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_value_resolver" type="service" id="debug.security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.cache.listener" type="service" id="sensio_framework_extra.cache.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.controller.listener" type="service" id="sensio_framework_extra.controller.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm" type="service" id="sensio_framework_extra.converter.doctrine.orm" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm.expression_language" type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm.expression_language.default" type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.listener" type="service" id="sensio_framework_extra.converter.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.manager" type="service" id="sensio_framework_extra.converter.manager" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.expression_language" type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.expression_language.default" type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.listener" type="service" id="sensio_framework_extra.security.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.view.guesser" type="service" id="sensio_framework_extra.view.guesser" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.view.listener" type="service" id="sensio_framework_extra.view.listener" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.attribute_bag" type="service" id="session.attribute_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.flash_bag" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.save_listener" type="service" id="session.save_listener" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.filesystem" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.metadata_bag" type="service" id="session.storage.metadata_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.mock_file" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.native" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.php_bridge" type="service" id="session.storage.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="streamed_response_listener" type="service" id="streamed_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.data_collector" type="service" id="swiftmailer.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer" type="service" id="swiftmailer.mailer.default" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.spool.memory" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.eventdispatcher" type="service" id="swiftmailer.mailer.default.transport.eventdispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.null" type="service" id="swiftmailer.mailer.default.transport.null" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.spool" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.plugin.messagelogger" type="service" id="swiftmailer.mailer.default.plugin.messagelogger" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.failover" type="service" id="swiftmailer.transport.failover" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.real" type="service" id="swiftmailer.mailer.default.transport.null" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.replacementfactory" type="service" id="swiftmailer.transport.replacementfactory" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php" type="service" id="translation.extractor.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="translator.selector" type="service" id="translator.selector" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html" type="service" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html.inner" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.assets" type="service" id="twig.extension.assets" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.code" type="service" id="twig.extension.code" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.form" type="service" id="twig.extension.form" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.logout_url" type="service" id="twig.extension.logout_url" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security" type="service" id="twig.extension.security" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.renderer" type="service" id="twig.form.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.translation.extractor" type="service" id="twig.translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.symfony" type="service" id="validator.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.add_link_header_listener" type="service" id="web_link.add_link_header_listener" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~YLx7aDk" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.mock_file"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~YLx7aDk"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.Bppmeg3"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="easyadmin.filter.extension"/>
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.IaOyiLB"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="easyadmin.form.type.extension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="easyadmin.form.guesser.missing_doctrine_orm_type_guesser"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service">
          <service class="Symfony\Component\Validator\Util\LegacyTranslatorProxy">
            <argument type="service" id="translator.default" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.PyRME4r"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.V.o0zE7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ar.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.bg.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ca.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.cs.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.da.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.de.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.el.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.en.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.es.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.eu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fa.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fi.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.gl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.hr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.hu.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.it.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.lt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.nl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.no.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.pl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.pt.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.pt_BR.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ro.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ru.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sv.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.tr.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.uk.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.zh_CN.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="sr_RS" type="collection">
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sr_RS.xlf</argument>
            <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sr_RS.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/validator/Resources/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/form/Resources/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/framework-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/FrameworkBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/SensioFrameworkExtraBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/DoctrineBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/DoctrineMigrationsBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/DoctrineFixturesBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/TwigBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/SecurityBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/EasyAdminBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/nelmio/cors-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/NelmioCorsBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/ApiPlatformBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/lexik/jwt-authentication-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/LexikJWTAuthenticationBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/swiftmailer-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/SwiftmailerBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/MonologBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/endroid/qr-code-bundle/src/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/EndroidQrCodeBundle/translations</argument>
          <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Resources/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/easycorp/easyadmin-bundle/src/Resources/translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>src/Resources/FrameworkBundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>src/Resources/SensioFrameworkExtraBundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>src/Resources/DoctrineBundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>src/Resources/DoctrineMigrationsBundle/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>src/Resources/DoctrineFixturesBundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>src/Resources/TwigBundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>src/Resources/SecurityBundle/translations</argument>
            <argument>src/Resources/EasyAdminBundle/translations</argument>
            <argument>vendor/nelmio/cors-bundle/translations</argument>
            <argument>src/Resources/NelmioCorsBundle/translations</argument>
            <argument>vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
            <argument>src/Resources/ApiPlatformBundle/translations</argument>
            <argument>vendor/lexik/jwt-authentication-bundle/translations</argument>
            <argument>src/Resources/LexikJWTAuthenticationBundle/translations</argument>
            <argument>vendor/symfony/swiftmailer-bundle/translations</argument>
            <argument>src/Resources/SwiftmailerBundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>src/Resources/MonologBundle/translations</argument>
            <argument>vendor/endroid/qr-code-bundle/src/translations</argument>
            <argument>src/Resources/EndroidQrCodeBundle/translations</argument>
            <argument>src/Resources/translations</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.XSes1R5.translation.warmer"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\AuthenticationSuccessListener"/>
          <argument>onAuthenticationSuccessResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.controller"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>easy_admin.post_initialize</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.request_post_initialize"/>
          <argument>initializeRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.swagger.listener.ui"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.hydra.listener.response.add_link_header"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.http_cache.listener.response.configure"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate_query_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurity</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostDenormalize</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ExceptionListener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\AuthoredEntitySubscriber"/>
          <argument>setUser</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\CommandEntityPostSubscriber"/>
          <argument>postSave</argument>
        </argument>
        <argument>31</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\CommandEntitySubscriber"/>
          <argument>save</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\CompanizedEntitySubscriber"/>
          <argument>setCompany</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\EphemeralKeyEventSubscriber"/>
          <argument>setEphemeralKey</argument>
        </argument>
        <argument>63</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\ExceptionSubscriber"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\PreSignUrlSubscriber"/>
          <argument>preSignUrl</argument>
        </argument>
        <argument>63</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\PublishedDateEntitySubscriber"/>
          <argument>setPublished</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\ShoppingCartItemEntitySubscriber"/>
          <argument>setCustomerShoppingCart</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\UserConfirmationSubscriber"/>
          <argument>confirmUser</argument>
        </argument>
        <argument>63</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\UserRegisterImageProfileSubscriber"/>
          <argument>userProfileImgRegistered</argument>
        </argument>
        <argument>31</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\EventSubscriber\UserRegisterSubscriber"/>
          <argument>userRegistered</argument>
        </argument>
        <argument>33</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>192</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~21_P14I" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XwZNkPh"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <argument type="service" id="service_container"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~21_P14I"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator._4eGLoe.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~tbkR1yh" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~tbkR1yh" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~tbkR1yh"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~tbkR1yh"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/config/secrets/test</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/.env.test.local</argument>
    </service>
    <service id=".2_~WKJiCHt" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~WKJiCHt" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="App\Serializer\UserAttributeNormalizer"/>
        <argument type="service" id="api_platform.serializer.uuid_denormalizer"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.problem.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.hydra.normalizer.error"/>
        <argument type="service" id="api_platform.problem.normalizer.error"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="api_platform.serializer.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
        <argument type="service" id="api_platform.jsonld.encoder"/>
        <argument type="service" id="api_platform.problem.encoder"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~WKJiCHt"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~WKJiCHt"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.C2Thyvr.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage">
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.bpvU51K"/>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~RYuvD59" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.6IK4DQX"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\AppFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id=".1_~1UmgOPq" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="easyadmin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Endroid\QrCodeBundle\Twig\QrCodeExtension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>test</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src</argument>
      <argument type="collection">
        <argument key="/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.o9nGMXB.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>!EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.7YWluy."/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~1UmgOPq"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.api"/>
        <argument type="service" id="security.authentication.provider.dao.api"/>
        <argument type="service" id="security.authentication.provider.anonymous.api"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>1</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.izaaVZ_"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>qnp2VZQHID</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.cRNYaJ1"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.database"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.database" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.database</argument>
      <argument>null</argument>
      <argument>App\Security\TokenAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>json_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.authentication.provider.guard.api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\TokenAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.database"/>
      <argument>api</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api" provider="security.user.provider.concrete.database"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\TokenAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao.api" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.database"/>
      <argument type="service" id="security.user_checker"/>
      <argument>api</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.api.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="collection"/>
      <argument>api</argument>
    </service>
    <service id="security.authentication.failure_handler.api.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.listener.json.api" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="security.authentication.success_handler.api.json_login"/>
      <argument type="service" id="security.authentication.failure_handler.api.json_login"/>
      <argument type="collection">
        <argument key="check_path">/api/login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_path">username</argument>
        <argument key="password_path">password</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.authentication.listener.anonymous.api" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="App\Security\TokenAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.authentication.listener.json.api"/>
        <argument type="service" id="security.authentication.listener.anonymous.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id=".service_locator.izaaVZ_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
      </argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.cRNYaJ1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="cache.easyadmin" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>er+l6J-BVk</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="easyadmin.command.make_admin_migration" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" public="true">
      <tag name="console.command" command="make:admin:migration"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
      <call method="setName">
        <argument>make:admin:migration</argument>
      </call>
    </service>
    <service id="easyadmin.config.manager" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ConfigManager" public="true">
      <argument>%easyadmin.config%</argument>
      <argument>true</argument>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="cache.easyadmin"/>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.normalizer_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.design_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.menu_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.action_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.metadata_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.property_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.view_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.template_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.default_config_pass"/>
      </call>
    </service>
    <service id="easyadmin.query_builder" class="EasyCorp\Bundle\EasyAdminBundle\Search\QueryBuilder" public="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.finder" class="EasyCorp\Bundle\EasyAdminBundle\Search\Finder" public="false">
      <argument type="service" id="easyadmin.query_builder"/>
      <argument type="service" id="easyadmin.paginator"/>
    </service>
    <service id="easyadmin.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Search\Autocomplete" public="true">
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="easyadmin.finder"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="easyadmin.paginator" class="EasyCorp\Bundle\EasyAdminBundle\Search\Paginator" public="true"/>
    <service id="easyadmin.router" class="EasyCorp\Bundle\EasyAdminBundle\Router\EasyAdminRouter" public="true">
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.twig.extension" class="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="easyadmin.router"/>
      <argument>true</argument>
      <argument type="service" id="security.logout_url_generator" on-invalid="null"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument type="service" id="easyadmin.security.authorization_checker"/>
    </service>
    <service id="easyadmin.security.authorization_checker" class="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" public="true">
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="easyadmin.listener.controller" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\ControllerListener" public="true">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="easyadmin.listener.request_post_initialize" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\RequestPostInitializeListener" public="true">
      <tag name="kernel.event_listener" event="easy_admin.post_initialize" method="initializeRequest"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.data_collector" class="EasyCorp\Bundle\EasyAdminBundle\DataCollector\EasyAdminDataCollector" public="false">
      <tag name="data_collector" template="@EasyAdmin/data_collector/easyadmin.html.twig" id="easyadmin"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.configuration.normalizer_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\NormalizerConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="90"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="easyadmin.filter.registry"/>
    </service>
    <service id="easyadmin.configuration.design_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\DesignConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="80"/>
      <argument>en</argument>
    </service>
    <service id="easyadmin.configuration.menu_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\MenuConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="70"/>
    </service>
    <service id="easyadmin.configuration.action_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ActionConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="60"/>
    </service>
    <service id="easyadmin.configuration.metadata_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\MetadataConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="50"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.configuration.property_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\PropertyConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="40"/>
      <argument type="service" id="form.registry"/>
      <argument type="service" id="easyadmin.filter.registry"/>
    </service>
    <service id="easyadmin.configuration.view_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ViewConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="30"/>
    </service>
    <service id="easyadmin.configuration.template_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\TemplateConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="20"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
    </service>
    <service id="easyadmin.configuration.default_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\DefaultConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="10"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController" class="EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController" public="true" autowire="true">
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.J0I9IhF.EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController"/>
      </call>
    </service>
    <service id="easyadmin.form.type" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType">
      <tag name="form.type" alias="easyadmin"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="collection">
        <argument key="9" type="service" id="easyadmin.form.type.configurator.code_editor"/>
        <argument key="8" type="service" id="easyadmin.form.type.configurator.textarea"/>
        <argument key="7" type="service" id="easyadmin.form.type.configurator.autocomplete"/>
        <argument key="6" type="service" id="easyadmin.form.type.configurator.collection"/>
        <argument key="5" type="service" id="easyadmin.form.type.configurator.checkbox"/>
        <argument key="4" type="service" id="easyadmin.filter.type.configurator.choice"/>
        <argument key="3" type="service" id="easyadmin.form.type.configurator.type"/>
        <argument key="2" type="service" id="easyadmin.form.type.configurator.entity"/>
        <argument key="1" type="service" id="easyadmin.form.type.configurator.ivory_ckeditor"/>
        <argument key="0" type="service" id="easyadmin.form.type.configurator.fos_ckeditor"/>
      </argument>
      <argument type="service" id="easyadmin.security.authorization_checker"/>
    </service>
    <service id="easyadmin.form.type.fileupload" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType">
      <tag name="form.type"/>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer</argument>
    </service>
    <service id="easyadmin.form.type.filters" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFiltersFormType">
      <tag name="form.type" alias="easyadmin_filters"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="collection">
        <argument key="9" type="service" id="easyadmin.form.type.configurator.code_editor"/>
        <argument key="8" type="service" id="easyadmin.form.type.configurator.textarea"/>
        <argument key="7" type="service" id="easyadmin.form.type.configurator.autocomplete"/>
        <argument key="6" type="service" id="easyadmin.form.type.configurator.collection"/>
        <argument key="5" type="service" id="easyadmin.form.type.configurator.checkbox"/>
        <argument key="4" type="service" id="easyadmin.filter.type.configurator.choice"/>
        <argument key="3" type="service" id="easyadmin.form.type.configurator.type"/>
        <argument key="2" type="service" id="easyadmin.form.type.configurator.entity"/>
        <argument key="1" type="service" id="easyadmin.form.type.configurator.ivory_ckeditor"/>
        <argument key="0" type="service" id="easyadmin.form.type.configurator.fos_ckeditor"/>
      </argument>
    </service>
    <service id="easyadmin.form.type.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType">
      <tag name="form.type" alias="easyadmin_autocomplete"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.batch" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminBatchFormType">
      <tag name="form.type" alias="easyadmin_batch"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.divider" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType">
      <tag name="form.type" alias="easyadmin_divider"/>
    </service>
    <service id="easyadmin.form.type.section" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType">
      <tag name="form.type" alias="easyadmin_section"/>
    </service>
    <service id="easyadmin.form.type.group" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType">
      <tag name="form.type" alias="easyadmin_group"/>
    </service>
    <service id="easyadmin.form.type.extension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EasyAdminExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.form.type.configurator.code_editor" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\CodeEditorTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="50"/>
    </service>
    <service id="easyadmin.filter.type.configurator.choice" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\Configurator\ChoiceFilterTypeConfigurator">
      <tag name="easyadmin.form.type.configurator" priority="0"/>
    </service>
    <service id="easyadmin.form.type.configurator.textarea" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\TextareaTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="40"/>
    </service>
    <service id="easyadmin.form.type.configurator.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\AutocompleteTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="30"/>
    </service>
    <service id="easyadmin.form.type.configurator.collection" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\CollectionTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="20"/>
    </service>
    <service id="easyadmin.form.type.configurator.checkbox" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\CheckboxTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="10"/>
    </service>
    <service id="easyadmin.form.type.configurator.type" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\TypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="0"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.configurator.entity" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\EntityTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-20"/>
    </service>
    <service id="easyadmin.form.type.configurator.ivory_ckeditor" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\IvoryCKEditorTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-130"/>
    </service>
    <service id="easyadmin.form.type.configurator.fos_ckeditor" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\FOSCKEditorTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-130"/>
    </service>
    <service id="easyadmin.filter.registry" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\FilterRegistry" public="true">
      <argument type="collection">
        <argument key="array">easyadmin.filter.type.array</argument>
        <argument key="boolean">easyadmin.filter.type.boolean</argument>
        <argument key="comparison">easyadmin.filter.type.comparison</argument>
        <argument key="date">easyadmin.filter.type.date</argument>
        <argument key="dateinterval">easyadmin.filter.type.dateinterval</argument>
        <argument key="datetime">easyadmin.filter.type.datetime</argument>
        <argument key="decimal">easyadmin.filter.type.decimal</argument>
        <argument key="choice">easyadmin.filter.type.choice</argument>
        <argument key="entity">easyadmin.filter.type.entity</argument>
        <argument key="float">easyadmin.filter.type.float</argument>
        <argument key="integer">easyadmin.filter.type.integer</argument>
        <argument key="text">easyadmin.filter.type.text</argument>
        <argument key="textarea">easyadmin.filter.type.textarea</argument>
        <argument key="time">easyadmin.filter.type.time</argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="easyadmin.filter.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="easyadmin.filter.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.viClhRs"/>
      <argument type="collection"/>
      <argument type="iterator"/>
    </service>
    <service id="easyadmin.filter.type_guesser.doctrine" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Guesser\DoctrineOrmFilterTypeGuesser">
      <tag name="easyadmin.filter.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.form.guesser.missing_doctrine_orm_type_guesser" class="EasyCorp\Bundle\EasyAdminBundle\Form\Guesser\MissingDoctrineOrmTypeGuesser" public="true">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.filter.type.array" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\ArrayFilterType">
      <tag name="easyadmin.filter.type" alias="array"/>
    </service>
    <service id="easyadmin.filter.type.boolean" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\BooleanFilterType">
      <tag name="easyadmin.filter.type" alias="boolean"/>
    </service>
    <service id="easyadmin.filter.type.comparison" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\ComparisonFilterType">
      <tag name="easyadmin.filter.type" alias="comparison"/>
    </service>
    <service id="easyadmin.filter.type.date" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\DateTimeFilterType">
      <tag name="easyadmin.filter.type" alias="date"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\DateType</argument>
    </service>
    <service id="easyadmin.filter.type.dateinterval" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\ComparisonFilterType">
      <tag name="easyadmin.filter.type" alias="dateinterval"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\DateIntervalType</argument>
      <argument type="collection"/>
      <argument></argument>
      <argument type="collection">
        <argument key="type">datetime</argument>
      </argument>
    </service>
    <service id="easyadmin.filter.type.datetime" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\DateTimeFilterType">
      <tag name="easyadmin.filter.type" alias="datetime"/>
    </service>
    <service id="easyadmin.filter.type.decimal" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\NumericFilterType">
      <tag name="easyadmin.filter.type" alias="decimal"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
      <argument type="collection">
        <argument key="input">string</argument>
      </argument>
    </service>
    <service id="easyadmin.filter.type.choice" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\ChoiceFilterType">
      <tag name="easyadmin.filter.type" alias="choice"/>
    </service>
    <service id="easyadmin.filter.type.entity" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\EntityFilterType">
      <tag name="easyadmin.filter.type" alias="entity"/>
    </service>
    <service id="easyadmin.filter.type.float" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\NumericFilterType">
      <tag name="easyadmin.filter.type" alias="float"/>
    </service>
    <service id="easyadmin.filter.type.integer" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\NumericFilterType">
      <tag name="easyadmin.filter.type" alias="integer"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
    </service>
    <service id="easyadmin.filter.type.text" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\TextFilterType">
      <tag name="easyadmin.filter.type" alias="text"/>
    </service>
    <service id="easyadmin.filter.type.textarea" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\TextFilterType">
      <tag name="easyadmin.filter.type" alias="textarea"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
    </service>
    <service id="easyadmin.filter.type.time" class="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\Type\DateTimeFilterType">
      <tag name="easyadmin.filter.type" alias="time"/>
      <argument>Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.route_name_resolver.cached" class="ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver" public="false">
      <argument type="service" id="api_platform.cache.route_name_resolver"/>
      <argument type="service" id="api_platform.route_name_resolver.cached.inner"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
      <argument type="service" id="router.default"/>
    </service>
    <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="api_platform.route_name_resolver.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore"/>
      <argument type="service" id="api_platform.identifier.converter" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.formats_provider" class="ApiPlatform\Core\Api\FormatsProvider">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Core\Serializer\SerializerFilterContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="App\Serializer\UserContextBuilder"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Core\Serializer\Filter\GroupFilter" public="false" abstract="true"/>
    <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Core\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-895"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.operation_path_resolver.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
    </service>
    <service id="api_platform.operation_path_resolver.custom" class="ApiPlatform\Core\PathResolver\CustomOperationPathResolver" public="false">
      <argument type="service" id="api_platform.operation_path_resolver.generator"/>
    </service>
    <service id="api_platform.operation_path_resolver.generator" class="ApiPlatform\Core\PathResolver\OperationPathResolver" public="false">
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id="api_platform.operation_path_resolver.underscore" class="ApiPlatform\Core\PathResolver\UnderscoreOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.underscore" instead.</deprecated>
    </service>
    <service id="api_platform.operation_path_resolver.dash" class="ApiPlatform\Core\PathResolver\DashOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.dash" instead.</deprecated>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator" public="false"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Core\Operation\DashPathSegmentNameGenerator" public="false"/>
    <service id="api_platform.listener.request.add_format" class="ApiPlatform\Core\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="7"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.listener.request.read" class="ApiPlatform\Core\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.identifier.converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.write" class="ApiPlatform\Core\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="32"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Core\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.serialize" class="ApiPlatform\Core\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.respond" class="ApiPlatform\Core\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.exception.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Core\EventListener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>api_platform.action.exception</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="exception_listener" on-invalid="null"/>
    </service>
    <service id="api_platform.action.placeholder" class="ApiPlatform\Core\Action\PlaceholderAction" public="true"/>
    <service id="api_platform.action.not_found" class="ApiPlatform\Core\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Core\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Core\Documentation\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.action.exception" class="ApiPlatform\Core\Action\ExceptionAction" public="true">
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.identifiers_extractor.cached" class="ApiPlatform\Core\Api\CachedIdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached.inner"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.identifier.converter" class="ApiPlatform\Core\Identifier\IdentifierConverter" public="false">
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.integer" class="ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.date_normalizer" class="ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached.inner"/>
    </service>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>cBWfR16Cxt</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>PpLd6RTCMD</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>AbXw2p4LsJ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Core\Bridge\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service" id="serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\Core\DataProvider\Pagination">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_command_api_platform_core_serializer_filter_property_filter" type="service" id="annotated_app_entity_command_api_platform_core_serializer_filter_property_filter"/>
        <argument key="annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter" type="service" id="annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter"/>
      </argument>
    </service>
    <service id="api_platform.filter_collection_factory" class="ApiPlatform\Core\Api\FilterCollectionFactory" public="false">
      <argument type="collection">
        <argument>annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter</argument>
        <argument>annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_command_api_platform_core_serializer_filter_property_filter</argument>
      </argument>
    </service>
    <service id="api_platform.filters" class="ApiPlatform\Core\Api\FilterCollection" public="false">
      <argument type="service" id="api_platform.filter_locator"/>
      <factory service="api_platform.filter_collection_factory" method="createFilterCollectionFromLocator"/>
      <deprecated>The "%service_id%" service is deprecated since 2.1 and will be removed in 3.0. Use the "api_platform.filter_locator" service instead.</deprecated>
    </service>
    <service id="api_platform.identifier.uuid_normalizer" class="ApiPlatform\Core\Bridge\RamseyUuid\Identifier\Normalizer\UuidNormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.serializer.uuid_denormalizer" class="ApiPlatform\Core\Bridge\RamseyUuid\Serializer\UuidDenormalizer" public="false">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.php_doc"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation"/>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.formats" class="ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.formats"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" public="false">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>o1DbtgwR0g</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>MlwIBGPLVv</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.metadata.extractor.xml" class="ApiPlatform\Core\Metadata\Extractor\XmlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.inherited"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceFilterMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.subresource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationSubresourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.metadata.extractor.yaml" class="ApiPlatform\Core\Metadata\Extractor\YamlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc" class="ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output"/>
    </service>
    <service id="api_platform.json_schema.type_factory" class="ApiPlatform\Core\JsonSchema\TypeFactory" public="false">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <call method="setSchemaFactory">
        <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      </call>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\Core\JsonSchema\Command\JsonSchemaGenerateCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway" class="ApiPlatform\Core\Swagger\Serializer\ApiGatewayNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.swagger.normalizer.api_gateway.inner"/>
    </service>
    <service id="api_platform.swagger.command.swagger_command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\SwaggerCommand">
      <tag name="console.command"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.swagger.listener.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.swagger.action.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Action\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\Core\JsonLd\ContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonld.normalizer.item" class="ApiPlatform\Core\JsonLd\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.object" class="ApiPlatform\Core\JsonLd\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="api_platform.jsonld.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonld</argument>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\Core\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.hydra.normalizer.documentation" class="ApiPlatform\Core\Hydra\Serializer\DocumentationNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.listener.response.add_link_header" class="ApiPlatform\Core\Hydra\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" class="ApiPlatform\Core\Hydra\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.normalizer.entrypoint" class="ApiPlatform\Core\Hydra\Serializer\EntrypointNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.error" class="ApiPlatform\Core\Hydra\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Core\Hydra\Serializer\PartialCollectionViewNormalizer" public="false">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Core\Hydra\Serializer\CollectionFiltersNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
    </service>
    <service id="api_platform.problem.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonproblem</argument>
    </service>
    <service id="api_platform.problem.normalizer.constraint_violation_list" class="ApiPlatform\Core\Problem\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.problem.normalizer.error" class="ApiPlatform\Core\Problem\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-810"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.data_persister" class="ApiPlatform\Core\Bridge\Doctrine\Common\DataPersister" public="false">
      <tag name="api_platform.data_persister" priority="-1000"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.collection_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.item_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.subresource_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.collection_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\CollectionDataProvider" public="false">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.default.item_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\ItemDataProvider" public="false">
      <tag name="api_platform.item_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.subresource_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\SubresourceDataProvider" public="false">
      <tag name="api_platform.subresource_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="api_platform.iri_converter"/>
      <argument key="3" type="service" id="property_accessor"/>
      <argument key="4" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="6" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument key="7" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2">order</argument>
      <argument key="3" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4">exists</argument>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.inherited"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-8"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.http_cache.listener.response.configure" class="ApiPlatform\Core\HttpCache\EventListener\AddHeadersListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-1"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Validator">
      <argument type="service" id="validator"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory" public="false">
      <argument type="service" id="validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.listener.view.validate" class="ApiPlatform\Core\Validator\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="64"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.validate_query_parameters" class="ApiPlatform\Core\Filter\QueryParameterValidateListener" public="false">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="16"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataCollector\RequestDataCollector" public="false">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
    </service>
    <service id="debug.api_platform.collection_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainCollectionDataProvider">
      <argument type="service" id="debug.api_platform.collection_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.item_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainItemDataProvider">
      <argument type="service" id="debug.api_platform.item_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainSubresourceDataProvider">
      <argument type="service" id="debug.api_platform.subresource_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.data_persister" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataPersister\TraceableChainDataPersister">
      <argument type="service" id="debug.api_platform.data_persister.inner"/>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Core\Security\ResourceAccessChecker" public="false">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="api_platform.security.listener.request.deny_access" class="ApiPlatform\Core\Security\EventListener\DenyAccessListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurity" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurityPostDenormalize" priority="1"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Core\Security\Core\Authorization\ExpressionLanguageProvider" public="false">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand" public="true">
      <tag name="console.command" command="lexik:jwt:check-config"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:check-config</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_token_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateTokenCommand" public="true">
      <tag name="console.command" command="lexik:jwt:generate-token"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.database"/>
      </argument>
      <call method="setName">
        <argument>lexik:jwt:generate-token</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
      <argument></argument>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.listener" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint" public="false">
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager" public="true">
      <argument type="service" id="lexik_jwt_authentication.encoder.lcobucci"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.key_loader.openssl" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\OpenSSLKeyLoader" public="false">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <deprecated>The "%service_id%" service is deprecated since version 2.5 and will be removed in 3.0. Use lexik_jwt_authentication.key_loader.raw instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader" public="false">
      <argument>%env(resolve:JWT_SECRET_KEY)%</argument>
      <argument>%env(resolve:JWT_PUBLIC_KEY)%</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.encoder.default" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.default"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.default" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\DefaultJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>3600</argument>
      <argument>0</argument>
      <deprecated>The "%service_id%" is deprecated since version 2.5 and will be removed in 5.0, use "lexik_jwt_authentication.jws_provider.lcobucci" instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.encoder.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.lcobucci"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\LcobucciJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>3600</argument>
      <argument>0</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor" public="false">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider" public="false">
      <argument></argument>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~EPqcGrg" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~EPqcGrg" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~EPqcGrg" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~EPqcGrg" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~EPqcGrg"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~EPqcGrg"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~EPqcGrg"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~EPqcGrg"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.null" class="Swift_Transport_NullTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.handler.main.http_code_strategy" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy">
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="code">404</argument>
          <argument key="urls" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="code">405</argument>
          <argument key="urls" type="collection"/>
        </argument>
      </argument>
      <argument>400</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="monolog.handler.nested"/>
      <argument type="service" id="monolog.handler.main.http_code_strategy"/>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/Users/geoffroybellemare/Documents/workspace/PhpServer/var/log/test.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCodeBundle\Controller\GenerateController" class="Endroid\QrCodeBundle\Controller\GenerateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Endroid\QrCode\Factory\QrCodeFactory"/>
    </service>
    <service id="Endroid\QrCode\WriterRegistry" class="Endroid\QrCode\WriterRegistry" public="false" autowire="true" autoconfigure="true">
      <call method="addWriters">
        <argument type="tagged_iterator" tag="endroid.qr_code.writer"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\BinaryWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\DebugWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\EpsWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\PngWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\SvgWriter"/>
      </call>
    </service>
    <service id="Endroid\QrCode\Factory\QrCodeFactory" class="Endroid\QrCode\Factory\QrCodeFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="writer">png</argument>
        <argument key="size">300</argument>
        <argument key="margin">10</argument>
        <argument key="error_correction_level">low</argument>
        <argument key="validate_result">false</argument>
        <argument key="writer_options" type="collection"/>
        <argument key="encoding">UTF-8</argument>
      </argument>
      <argument type="service" id="Endroid\QrCode\WriterRegistry"/>
    </service>
    <service id="Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Endroid\QrCode\Factory\QrCodeFactory"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="annotated_app_entity_prestation_api_platform_core_serializer_filter_property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument>properties</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument>id</argument>
        <argument>name</argument>
        <argument>quantity</argument>
        <argument>price</argument>
        <argument>company</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_command_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="customer">exact</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_command_api_platform_core_serializer_filter_property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument>properties</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument>id</argument>
        <argument>totalPrice</argument>
        <argument>commandItems</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DefaultController" class="App\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DefaultController" class="App\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DefaultController" class="App\Controller\DefaultController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SpotController" class="App\Controller\SpotController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SpotController" class="App\Controller\SpotController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SpotController" class="App\Controller\SpotController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ExceptionListener" class="App\EventListener\ExceptionListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ExceptionListener" class="App\EventListener\ExceptionListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\AuthoredEntitySubscriber" class="App\EventSubscriber\AuthoredEntitySubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\AuthoredEntitySubscriber" class="App\EventSubscriber\AuthoredEntitySubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\CommandEntityPostSubscriber" class="App\EventSubscriber\CommandEntityPostSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\CommandEntityPostSubscriber" class="App\EventSubscriber\CommandEntityPostSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\CommandEntitySubscriber" class="App\EventSubscriber\CommandEntitySubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\CommandEntitySubscriber" class="App\EventSubscriber\CommandEntitySubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\CompanizedEntitySubscriber" class="App\EventSubscriber\CompanizedEntitySubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\CompanizedEntitySubscriber" class="App\EventSubscriber\CompanizedEntitySubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\EphemeralKeyEventSubscriber" class="App\EventSubscriber\EphemeralKeyEventSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\EphemeralKeyEventSubscriber" class="App\EventSubscriber\EphemeralKeyEventSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\ExceptionSubscriber" class="App\EventSubscriber\ExceptionSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\ExceptionSubscriber" class="App\EventSubscriber\ExceptionSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\PreSignUrlSubscriber" class="App\EventSubscriber\PreSignUrlSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\PreSignUrlSubscriber" class="App\EventSubscriber\PreSignUrlSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\PublishedDateEntitySubscriber" class="App\EventSubscriber\PublishedDateEntitySubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\PublishedDateEntitySubscriber" class="App\EventSubscriber\PublishedDateEntitySubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\ShoppingCartItemEntitySubscriber" class="App\EventSubscriber\ShoppingCartItemEntitySubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\ShoppingCartItemEntitySubscriber" class="App\EventSubscriber\ShoppingCartItemEntitySubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\UserConfirmationSubscriber" class="App\EventSubscriber\UserConfirmationSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\UserConfirmationSubscriber" class="App\EventSubscriber\UserConfirmationSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\UserRegisterImageProfileSubscriber" class="App\EventSubscriber\UserRegisterImageProfileSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\UserRegisterImageProfileSubscriber" class="App\EventSubscriber\UserRegisterImageProfileSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\UserRegisterSubscriber" class="App\EventSubscriber\UserRegisterSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\UserRegisterSubscriber" class="App\EventSubscriber\UserRegisterSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommandRepository" class="App\Repository\CommandRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommandRepository" class="App\Repository\CommandRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommentRepository" class="App\Repository\CommentRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommentRepository" class="App\Repository\CommentRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShoppingCartItemRepository" class="App\Repository\ShoppingCartItemRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShoppingCartItemRepository" class="App\Repository\ShoppingCartItemRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShoppingCartRepository" class="App\Repository\ShoppingCartRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShoppingCartRepository" class="App\Repository\ShoppingCartRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SpotRepository" class="App\Repository\SpotRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SpotRepository" class="App\Repository\SpotRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SpotSubTypeRepository" class="App\Repository\SpotSubTypeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SpotSubTypeRepository" class="App\Repository\SpotSubTypeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TownRepository" class="App\Repository\TownRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TownRepository" class="App\Repository\TownRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.App\Serializer\UserAttributeNormalizer" class="App\Serializer\UserAttributeNormalizer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\UserAttributeNormalizer" class="App\Serializer\UserAttributeNormalizer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validators\Constraints\CompanyOwnerValidator" class="App\Validators\Constraints\CompanyOwnerValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validators\Constraints\CompanyOwnerValidator" class="App\Validators\Constraints\CompanyOwnerValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validators\Constraints\ShoppingCartNotEmptyValidator" class="App\Validators\Constraints\ShoppingCartNotEmptyValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validators\Constraints\ShoppingCartNotEmptyValidator" class="App\Validators\Constraints\ShoppingCartNotEmptyValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.viClhRs" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="easyadmin.filter.type.array" type="service" id="easyadmin.filter.type.array"/>
        <argument key="easyadmin.filter.type.boolean" type="service" id="easyadmin.filter.type.boolean"/>
        <argument key="easyadmin.filter.type.choice" type="service" id="easyadmin.filter.type.choice"/>
        <argument key="easyadmin.filter.type.comparison" type="service" id="easyadmin.filter.type.comparison"/>
        <argument key="easyadmin.filter.type.date" type="service" id="easyadmin.filter.type.date"/>
        <argument key="easyadmin.filter.type.dateinterval" type="service" id="easyadmin.filter.type.dateinterval"/>
        <argument key="easyadmin.filter.type.datetime" type="service" id="easyadmin.filter.type.datetime"/>
        <argument key="easyadmin.filter.type.decimal" type="service" id="easyadmin.filter.type.decimal"/>
        <argument key="easyadmin.filter.type.entity" type="service" id="easyadmin.filter.type.entity"/>
        <argument key="easyadmin.filter.type.float" type="service" id="easyadmin.filter.type.float"/>
        <argument key="easyadmin.filter.type.integer" type="service" id="easyadmin.filter.type.integer"/>
        <argument key="easyadmin.filter.type.text" type="service" id="easyadmin.filter.type.text"/>
        <argument key="easyadmin.filter.type.textarea" type="service" id="easyadmin.filter.type.textarea"/>
        <argument key="easyadmin.filter.type.time" type="service" id="easyadmin.filter.type.time"/>
      </argument>
    </service>
    <service id=".service_locator.76AQ1_o" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="data" type="service" id=".errored..service_locator.76AQ1_o.App\Entity\Command"/>
      </argument>
    </service>
    <service id=".service_locator.B_xsg_v" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cart" type="service" id=".errored..service_locator.B_xsg_v.App\Entity\ShoppingCart"/>
      </argument>
    </service>
    <service id=".service_locator.9_ly_mQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="data" type="service" id=".errored..service_locator.9_ly_mQ.App\Entity\User"/>
      </argument>
    </service>
    <service id=".service_locator.VX2lGJN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="spot" type="service" id=".errored..service_locator.VX2lGJN.App\Entity\Spot"/>
      </argument>
    </service>
    <service id=".service_locator.AmqfVqq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\CommandIntentAction::__invoke" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\CreateCheckoutSession::__invoke" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\PaymentIntentAction::__invoke" type="service" id=".service_locator.B_xsg_v"/>
        <argument key="App\Controller\ResetPasswordAction::__invoke" type="service" id=".service_locator.9_ly_mQ"/>
        <argument key="App\Controller\SpotController::delete" type="service" id=".service_locator.VX2lGJN"/>
        <argument key="App\Controller\SpotController::post" type="service" id=".service_locator.VX2lGJN"/>
        <argument key="App\Controller\CommandIntentAction:__invoke" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\CommandIntentAction" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\CreateCheckoutSession:__invoke" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\CreateCheckoutSession" type="service" id=".service_locator.76AQ1_o"/>
        <argument key="App\Controller\PaymentIntentAction:__invoke" type="service" id=".service_locator.B_xsg_v"/>
        <argument key="App\Controller\PaymentIntentAction" type="service" id=".service_locator.B_xsg_v"/>
        <argument key="App\Controller\ResetPasswordAction:__invoke" type="service" id=".service_locator.9_ly_mQ"/>
        <argument key="App\Controller\ResetPasswordAction" type="service" id=".service_locator.9_ly_mQ"/>
        <argument key="App\Controller\SpotController:delete" type="service" id=".service_locator.VX2lGJN"/>
        <argument key="App\Controller\SpotController:post" type="service" id=".service_locator.VX2lGJN"/>
      </argument>
    </service>
    <service id=".service_locator.PyRME4r" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Validators\Constraints\CompanyOwnerValidator" type="service" id="App\Validators\Constraints\CompanyOwnerValidator"/>
        <argument key="App\Validators\Constraints\ShoppingCartNotEmptyValidator" type="service" id="App\Validators\Constraints\ShoppingCartNotEmptyValidator"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.IaOyiLB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType" type="service" id="easyadmin.form.type.autocomplete"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminBatchFormType" type="service" id="easyadmin.form.type.batch"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType" type="service" id="easyadmin.form.type.divider"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFiltersFormType" type="service" id="easyadmin.form.type.filters"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType" type="service" id="easyadmin.form.type"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType" type="service" id="easyadmin.form.type.group"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType" type="service" id="easyadmin.form.type.section"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType" type="service" id="easyadmin.form.type.fileupload"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id=".service_locator.bpvU51K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.6IK4DQX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\CommandRepository" type="service" id="App\Repository\CommandRepository"/>
        <argument key="App\Repository\CommentRepository" type="service" id="App\Repository\CommentRepository"/>
        <argument key="App\Repository\ShoppingCartItemRepository" type="service" id="App\Repository\ShoppingCartItemRepository"/>
        <argument key="App\Repository\ShoppingCartRepository" type="service" id="App\Repository\ShoppingCartRepository"/>
        <argument key="App\Repository\SpotRepository" type="service" id="App\Repository\SpotRepository"/>
        <argument key="App\Repository\SpotSubTypeRepository" type="service" id="App\Repository\SpotSubTypeRepository"/>
        <argument key="App\Repository\TownRepository" type="service" id="App\Repository\TownRepository"/>
        <argument key="App\Repository\UserRepository" type="service" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.V.o0zE7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.vdmMuyE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\DefaultController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\DefaultController"/>
      <argument>App\Controller\DefaultController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\SpotController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SpotController"/>
      <argument>App\Controller\SpotController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.XSes1R5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.XSes1R5.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.XSes1R5" method="withContext"/>
    </service>
    <service id=".service_locator._4eGLoe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator._4eGLoe.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator._4eGLoe" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.C2Thyvr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.C2Thyvr.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.C2Thyvr" method="withContext"/>
    </service>
    <service id=".service_locator.o9nGMXB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.o9nGMXB.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.o9nGMXB" method="withContext"/>
    </service>
    <service id=".service_locator.J0I9IhF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="easyadmin.autocomplete" type="service" id="easyadmin.autocomplete"/>
        <argument key="easyadmin.config.manager" type="service" id="easyadmin.config.manager"/>
        <argument key="easyadmin.filter.registry" type="service" id="easyadmin.filter.registry"/>
        <argument key="easyadmin.paginator" type="service" id="easyadmin.paginator"/>
        <argument key="easyadmin.property_accessor" type="service" id="property_accessor"/>
        <argument key="easyadmin.query_builder" type="service" id="easyadmin.query_builder"/>
        <argument key="easyadmin.security.authorization_checker" type="service" id="easyadmin.security.authorization_checker"/>
        <argument key="event_dispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.J0I9IhF.EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController"/>
      <argument>EasyCorp\Bundle\EasyAdminBundle\Controller\EasyAdminController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.J0I9IhF" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.76WThHL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.Bppmeg3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="request_stack" type="service" id="request_stack"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service" id="session.storage.mock_file" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XwZNkPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="App\Serializer\UserContextBuilder.inner" class="ApiPlatform\Core\Serializer\SerializerContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="api_platform.identifiers_extractor.cached.inner" class="ApiPlatform\Core\Api\IdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Core\Hydra\Serializer\CollectionNormalizer" public="false">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\Core\JsonSchema\SchemaFactory" public="false">
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="debug.api_platform.collection_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainCollectionDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.collection_data_provider"/>
    </service>
    <service id="debug.api_platform.item_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainItemDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.item_data_provider"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.subresource_data_provider"/>
    </service>
    <service id="debug.api_platform.data_persister.inner" class="ApiPlatform\Core\DataPersister\ChainDataPersister" public="false">
      <argument type="tagged_iterator" tag="api_platform.data_persister"/>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.AmqfVqq"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.AmqfVqq"/>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway.inner" class="ApiPlatform\Core\Swagger\Serializer\DocumentationNormalizer" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.operation_path_resolver.router"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>true</argument>
      <argument>page</argument>
      <argument>false</argument>
      <argument>itemsPerPage</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument>pagination</argument>
      <argument type="collection"/>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.route_name_resolver.cached.inner" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver" public="false">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached.inner" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id=".errored..service_locator.76AQ1_o.App\Entity\Command" class="App\Entity\Command"/>
    <service id=".errored..service_locator.B_xsg_v.App\Entity\ShoppingCart" class="App\Entity\ShoppingCart"/>
    <service id=".errored..service_locator.9_ly_mQ.App\Entity\User" class="App\Entity\User"/>
    <service id=".errored..service_locator.VX2lGJN.App\Entity\Spot" class="App\Entity\Spot"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.cR8lQZC"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="make:admin:migration">easyadmin.command.make_admin_migration</argument>
        <argument key="lexik:jwt:check-config">lexik_jwt_authentication.check_config_command</argument>
        <argument key="lexik:jwt:generate-token">lexik_jwt_authentication.generate_token_command</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
      </argument>
    </service>
    <service id=".service_locator.cR8lQZC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="easyadmin.command.make_admin_migration" type="service" id="easyadmin.command.make_admin_migration"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service" id="lexik_jwt_authentication.check_config_command"/>
        <argument key="lexik_jwt_authentication.generate_token_command" type="service" id="lexik_jwt_authentication.generate_token_command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id=".service_locator.7YWluy." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.mock_file" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.mock_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.database"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="easyadmin.property_accessor" alias="property_accessor" public="true"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Configuration\ConfigManager" alias="easyadmin.config.manager"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Search\QueryBuilder" alias="easyadmin.query_builder"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Search\Paginator" alias="easyadmin.paginator"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Search\Autocomplete" alias="easyadmin.autocomplete"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" alias="easyadmin.security.authorization_checker"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Filter\FilterRegistry" alias="easyadmin.filter.registry" public="true"/>
    <service id="api_platform.serializer" alias="serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor" public="false"/>
    <service id="api_platform.property_info" alias="property_info" public="false"/>
    <service id="ApiPlatform\Core\Api\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Core\Api\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Core\Api\IriConverterInterface" alias="api_platform.iri_converter"/>
    <service id="ApiPlatform\Core\Api\OperationAwareFormatsProviderInterface" alias="api_platform.formats_provider">
      <deprecated>The "%alias_id%" alias is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="ApiPlatform\Core\Serializer\SerializerContextBuilderInterface" alias="api_platform.serializer.context_builder.filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="api_platform.operation_path_resolver" alias="api_platform.operation_path_resolver.router" public="false"/>
    <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.patch_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_subresource" alias="api_platform.action.placeholder" public="true"/>
    <service id="ApiPlatform\Core\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Core\Api\IdentifiersExtractorInterface" alias="api_platform.identifiers_extractor.cached"/>
    <service id="ApiPlatform\Core\DataPersister\DataPersisterInterface" alias="debug.api_platform.data_persister"/>
    <service id="ApiPlatform\Core\DataProvider\ItemDataProviderInterface" alias="debug.api_platform.item_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\CollectionDataProviderInterface" alias="debug.api_platform.collection_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\SubresourceDataProviderInterface" alias="debug.api_platform.subresource_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\Pagination" alias="api_platform.pagination"/>
    <service id="api_platform.operation_path_resolver.default" alias="api_platform.operation_path_resolver.underscore"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.path_segment_name_generator.underscore"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_factory" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Core\JsonSchema\TypeFactoryInterface" alias="api_platform.json_schema.type_factory" public="false"/>
    <service id="ApiPlatform\Core\JsonSchema\SchemaFactoryInterface" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Core\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Core\Security\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.lcobucci"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="lexik_jwt_authentication.jwt_token_authenticator" alias="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.lcobucci" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.lcobucci"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.raw" public="true"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.null" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.null"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="Endroid\QrCode\WriterRegistryInterface" alias="Endroid\QrCode\WriterRegistry" public="false"/>
    <service id="Endroid\QrCode\Factory\QrCodeFactoryInterface" alias="Endroid\QrCode\Factory\QrCodeFactory" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.AmqfVqq"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id=".service_locator.c3XszGA" alias="api_platform.serializer_locator" public="false"/>
    <service id=".service_locator.lqU9Udk" alias="api_platform.filter_locator" public="false"/>
    <service id=".service_locator.thzCQbx" alias=".service_locator.PyRME4r" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.inherited.inner" alias="api_platform.metadata.property.metadata_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory" public="false"/>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation.inner" alias="api_platform.metadata.property.metadata_factory.serializer" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_factory.input_output" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.short_name.inner" alias="api_platform.metadata.resource.metadata_factory.php_doc" public="false"/>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.short_name" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.annotation.inner" alias="api_platform.metadata.subresource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.operation.inner" alias="api_platform.metadata.resource.filter_metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.inherited.inner" alias="api_platform.metadata.property.name_collection_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.formats.inner" alias="api_platform.metadata.resource.metadata_factory.operation" public="false"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.serializer.context_builder.filter" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="api_platform.serializer.context_builder.filter.inner" alias="App\Serializer\UserContextBuilder" public="false"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.identifiers_extractor.cached" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation.inner" alias="api_platform.metadata.resource.name_collection_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.xml" public="false"/>
    <service id="api_platform.hydra.normalizer.collection" alias="api_platform.hydra.normalizer.collection_filters" public="false"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view" public="false"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="api_platform.collection_data_provider" alias="debug.api_platform.collection_data_provider"/>
    <service id="api_platform.item_data_provider" alias="debug.api_platform.item_data_provider"/>
    <service id="api_platform.subresource_data_provider" alias="debug.api_platform.subresource_data_provider"/>
    <service id="api_platform.data_persister" alias="debug.api_platform.data_persister" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="api_platform.swagger.normalizer.documentation" alias="api_platform.swagger.normalizer.api_gateway" public="false"/>
    <service id="api_platform.route_name_resolver" alias="api_platform.route_name_resolver.cached" public="false"/>
    <service id="api_platform.subresource_operation_factory" alias="api_platform.subresource_operation_factory.cached" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.cached.inner" alias="api_platform.metadata.resource.metadata_factory.formats" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.metadata.property.metadata_factory.validator" public="false"/>
    <service id="console.command.public_alias.api_platform.json_schema.json_schema_generate_command" alias="api_platform.json_schema.json_schema_generate_command" public="true"/>
    <service id="console.command.public_alias.api_platform.swagger.command.swagger_command" alias="api_platform.swagger.command.swagger_command" public="true"/>
  </services>
</container>

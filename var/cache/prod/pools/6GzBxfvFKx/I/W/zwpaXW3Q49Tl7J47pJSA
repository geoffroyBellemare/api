<?php //App_Entity_Command

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\Command',
                'id',
                'secondaryId',
                'checkOutSessionID',
                'totalAmount',
                'created',
                'state',
                'customer',
                'commandItems',
                'shoppingCartItems',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'secondaryId' => $o[2],
                    'checkOutSessionID' => $o[3],
                    'totalAmount' => $o[4],
                    'created' => $o[5],
                    'state' => $o[6],
                    'customer' => $o[7],
                    'commandItems' => $o[8],
                    'shoppingCartItems' => $o[9],
                ],
            ],
            'groups' => [
                1 => [
                    'get-owner',
                    'get_command_with_item',
                ],
                [
                    'get-owner',
                    'get_command_with_item',
                ],
                [
                    'get_command_with_item',
                ],
                [
                    'get-owner',
                    'get_command_with_item',
                    'put-payment-intent',
                ],
                [
                    'get-owner',
                    'get_command_with_item',
                ],
                [
                    'get-owner',
                    'get_command_with_item',
                ],
                [
                    'get_command_with_item',
                ],
                [
                    'get-owner',
                    'get_command_with_item',
                ],
                [
                    'get_command_with_item',
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
